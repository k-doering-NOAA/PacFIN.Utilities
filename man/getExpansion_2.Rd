% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getExpansion_2.R
\name{getExpansion_2}
\alias{getExpansion_2}
\title{Expand PacFIN Samples to Catch}
\usage{
getExpansion_2(
  Pdata,
  Catch,
  Units = c("MT", "LB"),
  Convert = NULL,
  maxExp = 0.95
)
}
\arguments{
\item{Pdata}{A cleaned PacFIN dataframe with column "stratification" appended.}

\item{Catch}{A dataframe of catch data, in pounds or in metric tonnes.}

\item{Units}{The units of the \code{Catch} data frame, see
\code{measurements::conv_unit_options[["mass"]]}
for options. Typical units are metric tonnes (e.g., \code{"metric_ton"})
because that is the unit used in Stock Synthesis, but
expansions are done in pounds because fish weights are in pounds.
Thus, catches also need to be in pounds and will be converted as such.}

\item{Convert}{A deprecated argument that is now set to \code{NULL}.
Previously, it was a logical that defined if the Catch should be converted from
metric tonnes to pounds, where \code{TRUE} is now the same as setting
\code{Units = "MT"} and \code{FALSE}, which was the default, would be
\code{Units = "LB"}. Normally, one would have their catch in metric tonnes,
i.e., \code{Convert = TRUE} or \code{Units = "MT"},
such that it can be used within Stock Synthesis.
# todo: remove this input argument}

\item{maxExp}{The maximum expansion factor
(either a number or a quantile) for building expansions.
Typically, the default is 0.95.
Set \code{maxExp = Inf} to see largest values.}
}
\value{
The input PacFIN dataset, with column \code{Expansion_Factor_2} appended.
}
\description{
The second-stage expansion calculates the
per-year, per-trip, per-stratum total catch
divided by the sampled catch and appends it to the input data as
\code{Expansion_Factor_2}.
}
\details{
The workflow requires that \code{getExpansion_2} is run after
\code{\link{getExpansion_1}()} using the same data frame.
The input PacFIN dataset must contain a column called \code{stratification},
a character-valued user-designed stratification of the data whose values match the
column-names in the Catch dataset.

For example, if you've set \code{stratification} so that:

\code{   Pdata$stratification[ Pdata$geargroup == "TWL" & Pdata$state == CA ] = "S_TWL"}
\code{   Pdata$stratification[ Pdata$geargroup == "TWL" & Pdata$state != CA ] = "N_TWL"}

then the columns in Catch must be named "Year", "S_TWL" and "N_TWL"

or if you used:

\code{   Pdata$stratification[ Pdata$geargroup == "TWL" & Pdata$season == 1 ] = "WINTER_TWL"} 
\code{   Pdata$stratification[ Pdata$geargroup == "TWL" & Pdata$season == 2 ] = "SUMMER_TWL"}

then the columns in Catch must be named "Year", "WINTER_TWL", and "SUMMER_TWL".

You can use as many levels of stratification in your data and catch as you want,
as long as you encode those levels in \code{stratification} and in the column names
in your data.  \strong{Year} is automatically included as a level of stratification.
}
\section{Expansion}{

\itemize{
\item{Age data are expanded separately from lengths.}
\item{WA fish are generally only expanded using Expansion_Factor_2.}
\item{Other expansions are the product of Expansion_Factor_1 * Expansion_Factor_2}
\item{For age-at-length comps, set Final_Expansion_Factor to 1 because
  each fish represents only itself.}
}
}

\seealso{
\code{\link{Stratify}}
}
\author{
Andi Stephens
}
